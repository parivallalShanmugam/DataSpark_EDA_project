1. Customer Analysis
Gender Distribution
sql
Copy code
SELECT gender, COUNT(*) AS count
FROM customer
GROUP BY gender;
Age Distribution
sql
Copy code
SELECT age, COUNT(*) AS count
FROM customer
GROUP BY age
ORDER BY age;
Geographical Distribution
sql
Copy code
SELECT country, state, city, COUNT(*) AS count
FROM customer
GROUP BY country, state, city
ORDER BY count DESC;
Customer Segmentation
sql
Copy code
SELECT segment, COUNT(*) AS count
FROM customer
GROUP BY segment;
Lifetime Value
sql
Copy code
SELECT c.customerkey, c.name, SUM(p.unit_price_usd * s.quantity) AS total_revenue
FROM customer c
JOIN sales_exchange s ON c.customerkey = s.customerkey
JOIN product_table p ON s.productkey = p.productkey
GROUP BY c.customerkey, c.name
ORDER BY total_revenue DESC;
2. Sales and Revenue Analysis
Total Revenue
sql
Copy code
SELECT SUM(p.unit_price_usd * s.quantity) AS total_revenue
FROM sales_exchange s
JOIN product_table p ON s.productkey = p.productkey;
Monthly Sales
sql
Copy code
SELECT DATE_FORMAT(order_date, '%Y-%m') AS month, SUM(p.unit_price_usd * s.quantity) AS total_revenue
FROM sales_exchange s
JOIN product_table p ON s.productkey = p.productkey
GROUP BY DATE_FORMAT(order_date, '%Y-%m')
ORDER BY month;
Top Products
sql
Copy code
SELECT p.product_name, SUM(s.quantity) AS total_quantity, SUM(p.unit_price_usd * s.quantity) AS total_revenue
FROM sales_exchange s
JOIN product_table p ON s.productkey = p.productkey
GROUP BY p.product_name
ORDER BY total_revenue DESC
LIMIT 10;
3. Pricing and Profitability Analysis
Unit Cost vs. Unit Price
sql
Copy code
SELECT p.product_name, p.unit_cost_usd, p.unit_price_usd, (p.unit_price_usd - p.unit_cost_usd) AS profit_margin
FROM product_table p;
4. Order and Delivery Analysis
Number of Orders
sql
Copy code
SELECT COUNT(DISTINCT order_number) AS total_orders
FROM sales_exchange;
Average Order Value
sql
Copy code
SELECT AVG(total_revenue) AS average_order_value
FROM (
    SELECT order_number, SUM(p.unit_price_usd * s.quantity) AS total_revenue
    FROM sales_exchange s
    JOIN product_table p ON s.productkey = p.productkey
    GROUP BY order_number
) sub;
Delivery Time
sql
Copy code
SELECT AVG(DATEDIFF(delivery_date, order_date)) AS average_delivery_days
FROM sales_exchange;
On-time Delivery
sql
Copy code
SELECT COUNT(*) AS total_orders,
SUM(CASE WHEN DATEDIFF(delivery_date, order_date) <= shipping_days THEN 1 ELSE 0 END) AS on_time_orders
FROM sales_exchange;
5. Customer Behavior and Loyalty
Purchase Frequency
sql
Copy code
SELECT c.customerkey, c.name, COUNT(DISTINCT s.order_number) AS purchase_frequency
FROM customer c
JOIN sales_exchange s ON c.customerkey = s.customerkey
GROUP BY c.customerkey, c.name
ORDER BY purchase_frequency DESC;
Churn Analysis
sql
Copy code
SELECT c.customerkey, c.name, MAX(s.order_date) AS last_purchase_date
FROM customer c
JOIN sales_exchange s ON c.customerkey = s.customerkey
GROUP BY c.customerkey, c.name
HAVING MAX(s.order_date) < DATE_SUB(CURDATE(), INTERVAL 6 MONTH);
6. Sales by Location
Sales by Country
sql
Copy code
SELECT st.country, SUM(p.unit_price_usd * s.quantity) AS total_revenue
FROM sales_exchange s
JOIN store_column st ON s.storekey = st.storekey
JOIN product_table p ON s.productkey = p.productkey
GROUP BY st.country
ORDER BY total_revenue DESC;